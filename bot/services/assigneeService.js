const { loadDB } = require('../../database/db');

// –ü–æ–∏—Å–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ—Ç Gemini
function findAssigneeInDatabase(assigneeInfo) {
  if (!assigneeInfo || !assigneeInfo.mentioned) {
    return null;
  }

  const db = loadDB();
  const employees = db.employees || []; // –ë–µ—Ä–µ–º –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤

  if (employees.length === 0) {
    return null;
  }

  // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω email
  if (assigneeInfo.email) {
    const foundByEmail = employees.find(emp =>
      emp.email.toLowerCase() === assigneeInfo.email.toLowerCase()
    );
    if (foundByEmail) {
      return foundByEmail;
    }
  }

  // –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ –∏–º—è
  if (assigneeInfo.name) {
    const name = assigneeInfo.name.toLowerCase();

    // –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –ø–æ–ª–Ω–æ–º—É –∏–º–µ–Ω–∏
    const foundByFullName = employees.find(emp =>
      emp.name.toLowerCase() === name
    );
    if (foundByFullName) {
      return foundByFullName;
    }

    // –ü–æ–∏—Å–∫ –ø–æ —á–∞—Å—Ç–∏—á–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é –∏–º–µ–Ω–∏
    const foundByPartialName = employees.find(emp =>
      emp.name.toLowerCase().includes(name) ||
      name.includes(emp.name.toLowerCase())
    );
    if (foundByPartialName) {
      return foundByPartialName;
    }

    // –ü–æ–∏—Å–∫ –ø–æ –ø–µ—Ä–≤–æ–º—É –∏–º–µ–Ω–∏ (–¥–æ –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–æ–±–µ–ª–∞)
    const firstName = name.split(' ')[0];
    const foundByFirstName = employees.find(emp =>
      emp.name.toLowerCase().split(' ')[0] === firstName
    );
    if (foundByFirstName) {
      return foundByFirstName;
    }
  }

  // –ü–æ–∏—Å–∫ –ø–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º —Ç–µ—Ä–º–∏–Ω–∞–º –ø–æ–∏—Å–∫–∞
  if (assigneeInfo.searchTerms && Array.isArray(assigneeInfo.searchTerms)) {
    for (const term of assigneeInfo.searchTerms) {
      const lowerTerm = term.toLowerCase();

      const foundByTerm = employees.find(emp =>
        emp.name.toLowerCase().includes(lowerTerm) ||
        lowerTerm.includes(emp.name.toLowerCase()) ||
        emp.email.toLowerCase().includes(lowerTerm) ||
        (emp.position && emp.position.toLowerCase().includes(lowerTerm))
      );

      if (foundByTerm) {
        return foundByTerm;
      }
    }
  }

  return null;
}


// –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–∞–π–¥–µ–Ω–Ω–æ–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ
function createAssigneeFoundMessage(employee, originalInfo) {
  return `üë§ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞–π–¥–µ–Ω –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: *${employee.name}* (${employee.position || '–î–æ–ª–∂–Ω–æ—Å—Ç—å –Ω–µ —É–∫–∞–∑–∞–Ω–∞'})`;
}

// –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ç–æ–º, —á—Ç–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
function createAssigneeNotFoundMessage(assigneeInfo) {
  let message = '‚ùì –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å —É–ø–æ–º—è–Ω—É—Ç, –Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:\n';

  if (assigneeInfo.name) {
    message += `‚Ä¢ –ò–º—è: ${assigneeInfo.name}\n`;
  }
  if (assigneeInfo.email) {
    message += `‚Ä¢ Email: ${assigneeInfo.email}\n`;
  }
  if (assigneeInfo.searchTerms && assigneeInfo.searchTerms.length > 0) {
    message += `‚Ä¢ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã: ${assigneeInfo.searchTerms.join(', ')}\n`;
  }

  message += '\n–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:';

  return message;
}

module.exports = {
  findAssigneeInDatabase,
  createAssigneeFoundMessage,
  createAssigneeNotFoundMessage
};