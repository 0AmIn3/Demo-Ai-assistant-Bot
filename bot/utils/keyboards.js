// –°–æ–∑–¥–∞–Ω–∏–µ inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ø–∏—Å–∫–∞
function createListSelectionKeyboard(lists) {
  const keyboard = lists.map(list => ([{
    text: list.name,
    callback_data: `select_list_${list.id}`
  }]));

  keyboard.push([{
    text: '‚ùå –û—Ç–º–µ–Ω–∞',
    callback_data: 'cancel_task'
  }]);

  return { inline_keyboard: keyboard };
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
function createAssigneeKeyboard(employees) {
  const keyboard = employees.map(emp => {
    const buttonText = emp.name +
      (emp.position ? ` (${emp.position})` : '') +
      (emp.telegramUserId ? ' üì±' : '');

    return [{
      text: buttonText,
      callback_data: `select_assignee_${emp.plankaUserId}`
    }];
  });

  keyboard.push([{
    text: 'üë§ –ë–µ–∑ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è',
    callback_data: 'select_assignee_none'
  }]);

  keyboard.push([{
    text: '‚ùå –û—Ç–º–µ–Ω–∞',
    callback_data: 'cancel_task'
  }]);

  return { inline_keyboard: keyboard };
}

module.exports = {
  createListSelectionKeyboard,
  createAssigneeKeyboard
};